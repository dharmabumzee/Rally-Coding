### #1
### Integer Equal to It's Index
You are given an array of non-negative integers as an argument. Return the first element found in the array whose index is equal to its value.


Requirements
Must return a single integer
If there are multiple integers found must return only the first occurrence.
Example #1
solve([10, 20, 11, 12, 4])
> 4

We return 4 since it is also at index 4 of the array

Example #2
solve([2, 1, 11, 12, 4])
> 1

Both 1 and 4's values match their indexes in the array. We return 1 since it is the first occurrence.

Solution: 

const solve = (intArray) => intArray.filter(x => x === intArray.indexOf(x))[0];


### #2#
### Return String at Character
You are given a string containing multiple newline characters \n and a positive integer K, representing the line number, as arguments. Return the line of text at integer K.

Newline character should be omitted from the returned string

Requirements
Must return a string
Must work with spaces separating words in the string
Must work with lower and uppercase characters.
Example #1
solve("apples\nmilk\nbread\nfish\n", 2)
> "milk"
Example #2
solve("Beverly Hills\nSagaponack\nSanta Monica\n", 1)
> "Beverly Hills"

Solution: 

const solve = (strArg, k) => strArg.split('\n')[k-1];

### #3
### Remove Letters from Special Characters
You are given a string that contains only characters and parenthesis as an argument. Return a string that has the parenthesis removed and contains only the characters.

Requirements
Must return a string
Example #1
solve("(a)(b)((c))(((d)))")
> "abcd"
Example #2
solve("((ab)(cd)()()df)")
> "abcddf"

Solution: 

const solve = (strArg) => strArg.replace(/[()]/g, '');

### #4
### Largest Integer in Array
You are given an array of integers as an argument. Return the largest integer.

Requirements
Must return a single integer
Must work with positive or negative integers
Example #1
solve([1,5,3,7])
> 7
Example #1
solve([1,-5,3,-7])
> 3

Solution: 

const solve = (intArray) => Math.max(...intArray);


### #5
### Joining Characters in an Array
You are give an array of strings and a single character K as arguments. Return a single string containing all of the original strings joined by the character K.

Requirements
Must return a string
Example #1
solve(["Hi", "there", "how", "are", "you"], "_")
> "Hi_there_how_are_you"
Example #2
solve(["a", "a", "a"], "b")
> "ababab"

Solution:

const solve = (strArray, k) => strArray.join(k);

### #6
### Find the Number of 1's in a 2D Array
You are given a two dimensional array containing arrays of integers as arguments. Return the amount of times that the number 1 is found in any of the arrays.

Requirements
Must return a single integer
Example #1
solve([
  [1, 4, 2, 1],
  [6, 3, 8, 9],
  [1, 5, 1, 0]
])
> 4

Solution: 

const solve = (intArray) => {
  let count = 0
  intArray.map( x => { x.map( y => y === 1 ? count++ : count) } );
  return count;
};

Solution#2:

const solve = (intArray) => intArray.flat().filter( x => x === 1).length;

### 7
### You are given a string and integer K as arguments. Split the string into an array of strings, where each element is no longer than K characters long. Return the resulting array.

The argument string will always be at least K characters long.

Requirements
Must return an array of strings
Example #1
solve("aabbbcccd", 3)
> ["aab", "bbc", "ccd"]
Example #2
solve("abcdefgh", 5)
> ["abcde","fgh"]

Solution:

const solve = (strArg, k) => strArg.match(new RegExp('.{1,' + k + '}', 'g'));

### 8
### Duplicating Strings
You are given a string and an integer K as arguments. Return an array of strings that is K elements long, where each element is the string that was provided.

Requirements
Must return an array of strings
Must work with uppercase, lowercase and special characters
Example #1
solve("abc", 5)
> ["abc", "abc", "abc", "abc", "abc",]
Example #2
solve("Hi!", 3)
> ["Hi!", "Hi!", "Hi!"]

Solution: 

const solve = (strArg, k) => new Array(k).fill(strArg);

### 9
### Kth Integer From End of Array
You are given an array of integers and an integer K as arguments. Return the element that is the Kth index from the end of the array.

Assume that the argument array length will always be at least K + 1

Requirements
Must return a single integer.
Must work with positive or negative integers
Example #1
solve([1,2,3,4,5,6], 0)
> 6
Example #2
solve([-1,2,3,-4,5,0], 3)
> 3

Solution:

const solve = (intArray, k) => intArray.reverse()[k];

### 10
### Remove First Integer in Array
You are given an array of integers as an argument. Return an array containing all elements from the argument array, omitting the first element.

Assume the argument array will always contain at least two elements.

Requirements
Must return an array of integers
Must work with both positive and negative integers
Example #1
solve([1,2,3,4,5])
> [2,3,4,5]
Example #2
solve([-1,-2])
> [-2]

Solution: 

const solve = (intArray) => intArray.slice(1);

### 11
### You are given two single word strings as arguments. Return true if the second string is a prefix of the first.

Requirements
Must return true or false
Example #1
solve("banner", "bang")
> false
Example #2
solve("hugging", "hug")
> true

Solution: 

const solve = (strOne, strTwo) => strOne.includes(strTwo, 0);

### 12

Multiples of Integers
You are given an array of integers and an integer K as arguments. Return true if each integer is an even multiple of integer K.

Requirements
Must return either true or false
Example #1
solve([2, 4, 6, 8], 2)
> true

2, 4, 6 and 8 are all multiples of 2

Example #2
solve([12, 14, 36, 18], 9)
> false

Only 18 and 36 are multiples of 9

Solution: 

const solve = (intArray, k) => intArray.every(x => x % k === 0);

### 13
### Remove all Zeros from Array
You are given an array of integers containing some zeros as an argument. Return an array of integers with all zeros removed, while maintaining the original order.

Requirements
Must return an array of integers
Example #1
solve([0, 0, 2, 0, 3, 0, 5])
> [2, 3, 5]

Solution: 

const solve = (intArray) => intArray.filter( x => x !== 0);

### 14
### Sum an Array of Integers
You are given an array of integers as an argument. Return the sum of all elements in the array.

Requirements
Must return a single integer
Must be able to handle negative integers
Example #1
solve([1, 5, 4])
> 10
Example #2
solve([10, -1, -4])
> 5

Solution: 

const solve = (intArray) => intArray.reduce((acc, currentValue) => acc + currentValue);

### 15 
### Alternate Between Upper and Lower Case Characters
You are given an array of lowercase single string characters as an argument. Return the same array but with each character alternating lowercase, then uppercase.

Requirements
Must return an array of strings
Example #1
solve(['a', 'b', 'c', 'd', 'e'])
> ['a', 'B', 'c', 'D', 'e']

Solution: 

const solve = (strArray) => strArray.map( (x, index) => index % 2 !== 0 ? x.toUpperCase() : x);

### 16
### Remove the First Element in Array
You are given an array of strings as an argument. Return a new array containing all elements from the original array excluding the first element.

The argument array will always be at least two elements long.

Requirements
Must return an array of strings
Example #1
solve(["pears", "apples", "oranges"])
> ["apples", "oranges"]
Example #2
solve(["apples", "apples"])
> ["apples"]

Solution: 

const solve = (strArray) => strArray.slice(1);
