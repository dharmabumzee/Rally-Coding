### 1
### Integers in Range of X,Y
You are given an array of integers and an array containing a range of integers (in the form of \[X, Y]) as arguments. Return an array containing all of the elements from the array of integers that are contained in the range.

X will always be a smaller number than Y.

There will always be at least one integer from the array found the X,Y range.

Requirements
Must return an array of integers
Must work with both positive and negative integers
Example #1
solve([1,2,3,5,6,7], [2,6])
> [3, 5]
Example #2
solve([1,2,3,4,5,10,20], [4,7])
> [5]

Solution: 

const solve = (intArray, range) => intArray.slice(range[0], range[1] - 1);

### 2
### You are given an array of integers and an integer N as arguments. Return the number in the array at the index of Integer N.

Integer N will never be more than the length of the argument array - 1.

Requirements
Must return an integer
Example #1
solve([20, 30, 40], 0)
> 20
Example #2
solve([3, 0, -1, 8], 2)
> -1

Solution: 

const solve = (intArray, n) => intArray[n];

### 3
### Sum of Strings
Find the sum of two integers represented as strings.

For example, given the string "123" and the string "111", your code should return the string "234".

Examples
First Argument	Second Argument	Expected Output
"10"	"20"	"30"
"48"	"2"	"50"
"-500"	"500"	"0"
"987"	"23"	"1000"
"36"	"23"	"59"

Solution:

const solve = (strOne, strTwo) => Number(strOne) + Number(strTwo);

### 4
### Arrays of Integers
You are given two arrays of integers as arguments. Return true if they contain the exact same elements in any order.

Requirements
Must return either true or false
Must account for negative integers
Example #1
solve([1,2,7],[7,1,2])
> true
Example #2
solve([5,7],[7,1])
> false
Example #3
solve([5,-7],[-7,5])
> true

Solution:

const solve = (arrOne, arrTwo) => arrOne.length === arrTwo.length ? arrOne.every( x => arrTwo.includes(x)) : false;

### 5
### Pairs of Integers
You are given two sorted arrays of integers and an integer K as arguments. Find one integer from each array that sums up to the integer K and return the pair as an array of integers.

Requirements
Must return an array of two integers
Example #1
solve([1,2,3], [4,5,6], 8)
> [2, 6]
Example #2
solve([1,2,3], [4,5,6], 9)
> [3, 6]

Solution: 

const solve = (arrayOne, arrayTwo, k) => {
  for (let x of arrayOne) {
    for (let y of arrayTwo) {
      if ( x + y === k ) {
        return [x, y]
      } 
    }
  }
}

### 6
### Create a Multiplication Table
You are given an integer N as an argument. Return a two dimensional array containing arrays of integers that make up a multiplication table from 1x1 to NxN.

The top left element must be zero.

Requirements
Must return a two dimensional array containing arrays of integers
Example #1
solve(4)
>  [[1, 2, 3, 4],
    [2, 4, 6, 8],
    [3, 6, 9, 12],
    [4, 8, 12, 16]]
    
Solution:

const solve = (n) => {
  const result = [];
  for ( let i = 1; i <= n; i++ ) {
    const row = [];
    for (let j = 1; j <= n; j++) {
      row.push(i * j);
    }
    result.push(row);
  }
  return result;
};
